}
corrs<-numeric()
for(j in 30:32) {
if ( nrow(na.omit(dfa[dfa$ID == j , ])) > threshold ) {
vect<-c( vect, cor(dfa$sulfate,dfa$nitrate) )
}
}
vect
#
#   for(j in 1:10) {
#     if (nrow(dfa[dfa$ID == j , ]) >= threshold) {
#       y<-"yes"
#     }
#   }
#   y
#
#   for(j in id) {
#     id<-c(j)
#     nobs<-c( nrow(na.omit(dat[dat$ID == j , ])))
#
#     comp<-rbind(comp,data.frame(id,nobs))
#
#comp<-rbind(comp,data.frame(c(j), c(nrow(na.omit(dat[dat$ID == id , ])))))
}
corr("specdata",10)
corr("specdata",0)
rm(vect)
vect
corr("specdata",0)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
list_files<-list.files(directory,full.names=TRUE)
dfa<-data.frame()
for(i in 30:35) {
x <- paste(directory,"/",formatC(i,width=3,format="d",flag="0"),".csv",sep="")
df2 <- read.csv(x)
dfa <- rbind(dfa,df2)
}
corrs<-numeric()
for(j in 30:32) {
if ( nrow(na.omit(dfa[dfa$ID == j , ])) > threshold ) {
corrs<-c( corrs, cor(dfa$sulfate,dfa$nitrate) )
}
}
corrs
#
#   for(j in 1:10) {
#     if (nrow(dfa[dfa$ID == j , ]) >= threshold) {
#       y<-"yes"
#     }
#   }
#   y
#
#   for(j in id) {
#     id<-c(j)
#     nobs<-c( nrow(na.omit(dat[dat$ID == j , ])))
#
#     comp<-rbind(comp,data.frame(id,nobs))
#
#comp<-rbind(comp,data.frame(c(j), c(nrow(na.omit(dat[dat$ID == id , ])))))
}
corr("specdata",0)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
list_files<-list.files(directory,full.names=TRUE)
dfa<-data.frame()
for(i in 30:35) {
x <- paste(directory,"/",formatC(i,width=3,format="d",flag="0"),".csv",sep="")
df2 <- read.csv(x)
dfa <- rbind(dfa,df2)
}
corrs<-numeric()
for(j in 30:32) {
if ( nrow(na.omit(dfa[dfa$ID == j , ])) > threshold ) {
corrs<-c( corrs, cor(dfa$sulfate,dfa$nitrate,na.rm=TRUE) )
}
}
corrs
#
#   for(j in 1:10) {
#     if (nrow(dfa[dfa$ID == j , ]) >= threshold) {
#       y<-"yes"
#     }
#   }
#   y
#
#   for(j in id) {
#     id<-c(j)
#     nobs<-c( nrow(na.omit(dat[dat$ID == j , ])))
#
#     comp<-rbind(comp,data.frame(id,nobs))
#
#comp<-rbind(comp,data.frame(c(j), c(nrow(na.omit(dat[dat$ID == id , ])))))
}
corr("specdata",0)
cor(df1$sulfate,df1$nitrate)
cor(df1$sulfate,df1$nitrate,na.rm=TRUE)
cor(df1$sulfate,df1$nitrate,use="pairwise.complete.obs")
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
list_files<-list.files(directory,full.names=TRUE)
dfa<-data.frame()
for(i in 30:35) {
x <- paste(directory,"/",formatC(i,width=3,format="d",flag="0"),".csv",sep="")
df2 <- read.csv(x)
dfa <- rbind(dfa,df2)
}
corrs<-numeric()
for(j in 30:32) {
if ( nrow(na.omit(dfa[dfa$ID == j , ])) > threshold ) {
corrs<-c( corrs, cor(dfa$sulfate,dfa$nitrate,use="pairwise.complete.obs") )
}
}
corrs
#
#   for(j in 1:10) {
#     if (nrow(dfa[dfa$ID == j , ]) >= threshold) {
#       y<-"yes"
#     }
#   }
#   y
#
#   for(j in id) {
#     id<-c(j)
#     nobs<-c( nrow(na.omit(dat[dat$ID == j , ])))
#
#     comp<-rbind(comp,data.frame(id,nobs))
#
#comp<-rbind(comp,data.frame(c(j), c(nrow(na.omit(dat[dat$ID == id , ])))))
}
corr("specdata",0)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
list_files<-list.files(directory,full.names=TRUE)
dfa<-data.frame()
for(i in 1:332) {
x <- paste(directory,"/",formatC(i,width=3,format="d",flag="0"),".csv",sep="")
df2 <- read.csv(x)
dfa <- rbind(dfa,df2)
}
corrs<-numeric()
for(j in 1:332) {
if ( nrow(na.omit(dfa[dfa$ID == j , ])) > threshold ) {
corrs<-c( corrs, cor(dfa$sulfate,dfa$nitrate,use="pairwise.complete.obs") )
}
}
corrs
#
#   for(j in 1:10) {
#     if (nrow(dfa[dfa$ID == j , ]) >= threshold) {
#       y<-"yes"
#     }
#   }
#   y
#
#   for(j in id) {
#     id<-c(j)
#     nobs<-c( nrow(na.omit(dat[dat$ID == j , ])))
#
#     comp<-rbind(comp,data.frame(id,nobs))
#
#comp<-rbind(comp,data.frame(c(j), c(nrow(na.omit(dat[dat$ID == id , ])))))
}
cr<-corr("specdata",150)
head(cr)
summary(cr)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
list_files<-list.files(directory,full.names=TRUE)
dfa<-data.frame()
for(i in 1:30) {
x <- paste(directory,"/",formatC(i,width=3,format="d",flag="0"),".csv",sep="")
df2 <- read.csv(x)
dfa <- rbind(dfa,df2)
}
corrs<-numeric()
for(j in 1:30) {
if ( nrow(na.omit(dfa[dfa$ID == j , ])) > threshold ) {
dfa_sub<-dfa[dfa$ID == j , ]
corrs<-c( corrs, cor(dfa_sub$sulfate,dfa_sub$nitrate,use="pairwise.complete.obs") )
}
}
corrs
#
#   for(j in 1:10) {
#     if (nrow(dfa[dfa$ID == j , ]) >= threshold) {
#       y<-"yes"
#     }
#   }
#   y
#
#   for(j in id) {
#     id<-c(j)
#     nobs<-c( nrow(na.omit(dat[dat$ID == j , ])))
#
#     comp<-rbind(comp,data.frame(id,nobs))
#
#comp<-rbind(comp,data.frame(c(j), c(nrow(na.omit(dat[dat$ID == id , ])))))
}
cr<-corr("specdata",150)
head(cr)
summary(cr)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
list_files<-list.files(directory,full.names=TRUE)
dfa<-data.frame()
for(i in 1:332) {
x <- paste(directory,"/",formatC(i,width=3,format="d",flag="0"),".csv",sep="")
df2 <- read.csv(x)
dfa <- rbind(dfa,df2)
}
corrs<-numeric()
for(j in 1:322) {
if ( nrow(na.omit(dfa[dfa$ID == j , ])) > threshold ) {
dfa_sub<-dfa[dfa$ID == j , ]
corrs<-c( corrs, cor(dfa_sub$sulfate,dfa_sub$nitrate,use="pairwise.complete.obs") )
}
}
corrs
#
#   for(j in 1:10) {
#     if (nrow(dfa[dfa$ID == j , ]) >= threshold) {
#       y<-"yes"
#     }
#   }
#   y
#
#   for(j in id) {
#     id<-c(j)
#     nobs<-c( nrow(na.omit(dat[dat$ID == j , ])))
#
#     comp<-rbind(comp,data.frame(id,nobs))
#
#comp<-rbind(comp,data.frame(c(j), c(nrow(na.omit(dat[dat$ID == id , ])))))
}
cr<-corr("specdata",150)
summary(cr)
head(cr)
submit()
head(cr)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
list_files<-list.files(directory,full.names=TRUE)
dfa<-data.frame()
corrs<-numeric()
for(i in 1:10) {
x <- paste(directory,"/",formatC(i,width=3,format="d",flag="0"),".csv",sep="")
df2 <- read.csv(x)
if ( nrow(na.omit(dfa[dfa$ID == j , ])) > threshold ) {
dfa_sub<-dfa[dfa$ID == j , ]
corrs<-c( corrs, cor(dfa_sub$sulfate,dfa_sub$nitrate,use="pairwise.complete.obs") )
}
}
corrs
#
#   for(j in 1:10) {
#     if (nrow(dfa[dfa$ID == j , ]) >= threshold) {
#       y<-"yes"
#     }
#   }
#   y
#
#   for(j in id) {
#     id<-c(j)
#     nobs<-c( nrow(na.omit(dat[dat$ID == j , ])))
#
#     comp<-rbind(comp,data.frame(id,nobs))
#
#comp<-rbind(comp,data.frame(c(j), c(nrow(na.omit(dat[dat$ID == id , ])))))
}
cr<-corr("specdata",150)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
list_files<-list.files(directory,full.names=TRUE)
dfa<-data.frame()
corrs<-numeric()
for(i in 1:10) {
x <- paste(directory,"/",formatC(i,width=3,format="d",flag="0"),".csv",sep="")
df2 <- read.csv(x)
if ( nrow(na.omit(dfa[dfa$ID == i , ])) > threshold ) {
dfa_sub<-dfa[dfa$ID == i , ]
corrs<-c( corrs, cor(dfa_sub$sulfate,dfa_sub$nitrate,use="complete.obs") )
}
}
corrs
#
#   for(j in 1:10) {
#     if (nrow(dfa[dfa$ID == j , ]) >= threshold) {
#       y<-"yes"
#     }
#   }
#   y
#
#   for(j in id) {
#     id<-c(j)
#     nobs<-c( nrow(na.omit(dat[dat$ID == j , ])))
#
#     comp<-rbind(comp,data.frame(id,nobs))
#
#comp<-rbind(comp,data.frame(c(j), c(nrow(na.omit(dat[dat$ID == id , ])))))
}
cr<-corr("specdata",150)
head(cr)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
list_files<-list.files(directory,full.names=TRUE)
dfa<-data.frame()
corrs<-numeric()
for(i in 1:10) {
x <- paste(directory,"/",formatC(i,width=3,format="d",flag="0"),".csv",sep="")
dfa <- read.csv(x)
if ( nrow(na.omit(dfa[dfa$ID == i , ])) > threshold ) {
dfa_sub<-dfa[dfa$ID == i , ]
corrs<-c( corrs, cor(dfa_sub$sulfate,dfa_sub$nitrate,use="complete.obs") )
}
}
corrs
#
#   for(j in 1:10) {
#     if (nrow(dfa[dfa$ID == j , ]) >= threshold) {
#       y<-"yes"
#     }
#   }
#   y
#
#   for(j in id) {
#     id<-c(j)
#     nobs<-c( nrow(na.omit(dat[dat$ID == j , ])))
#
#     comp<-rbind(comp,data.frame(id,nobs))
#
#comp<-rbind(comp,data.frame(c(j), c(nrow(na.omit(dat[dat$ID == id , ])))))
}
cr<-corr("specdata",150)
head(cr)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
list_files<-list.files(directory,full.names=TRUE)
dfa<-data.frame()
corrs<-numeric()
for(i in 1:332) {
x <- paste(directory,"/",formatC(i,width=3,format="d",flag="0"),".csv",sep="")
dfa <- read.csv(x)
if ( nrow(na.omit(dfa[dfa$ID == i , ])) > threshold ) {
dfa_sub<-dfa[dfa$ID == i , ]
corrs<-c( corrs, cor(dfa_sub$sulfate,dfa_sub$nitrate,use="complete.obs") )
}
}
corrs
#
#   for(j in 1:10) {
#     if (nrow(dfa[dfa$ID == j , ]) >= threshold) {
#       y<-"yes"
#     }
#   }
#   y
#
#   for(j in id) {
#     id<-c(j)
#     nobs<-c( nrow(na.omit(dat[dat$ID == j , ])))
#
#     comp<-rbind(comp,data.frame(id,nobs))
#
#comp<-rbind(comp,data.frame(c(j), c(nrow(na.omit(dat[dat$ID == id , ])))))
}
cr<-corr("specdata",150)
head(cr)
summary(cr)
cr<-corr("specdata",400)
head(cr)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
list_files<-list.files(directory,full.names=TRUE)
dfa<-data.frame()
corrs<-numeric()
for(i in 1:332) {
x <- paste(directory,"/",formatC(i,width=3,format="d",flag="0"),".csv",sep="")
dfa <- read.csv(x)
if ( nrow(na.omit(dfa[dfa$ID == i , ])) > threshold ) {
dfa_sub<-na.omit(dfa[dfa$ID == i , ])
corrs<-c( corrs, cor(dfa_sub$sulfate,dfa_sub$nitrate,use="complete.obs") )
}
}
corrs
#
#   for(j in 1:10) {
#     if (nrow(dfa[dfa$ID == j , ]) >= threshold) {
#       y<-"yes"
#     }
#   }
#   y
#
#   for(j in id) {
#     id<-c(j)
#     nobs<-c( nrow(na.omit(dat[dat$ID == j , ])))
#
#     comp<-rbind(comp,data.frame(id,nobs))
#
#comp<-rbind(comp,data.frame(c(j), c(nrow(na.omit(dat[dat$ID == id , ])))))
}
cr<-corr("specdata",150)
head(cr)
summary(cr)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
list_files<-list.files(directory,full.names=TRUE)
dfa<-data.frame()
corrs<-numeric()
for(i in 1:332) {
x <- paste(directory,"/",formatC(i,width=3,format="d",flag="0"),".csv",sep="")
dfa <- read.csv(x)
if ( nrow(na.omit(dfa[dfa$ID == i , ])) > threshold ) {
dfa_sub<-dfa[dfa$ID == i , ]
corrs<-c( corrs, cor(dfa_sub$sulfate,dfa_sub$nitrate,use="complete.obs") )
}
}
corrs
#
#   for(j in 1:10) {
#     if (nrow(dfa[dfa$ID == j , ]) >= threshold) {
#       y<-"yes"
#     }
#   }
#   y
#
#   for(j in id) {
#     id<-c(j)
#     nobs<-c( nrow(na.omit(dat[dat$ID == j , ])))
#
#     comp<-rbind(comp,data.frame(id,nobs))
#
#comp<-rbind(comp,data.frame(c(j), c(nrow(na.omit(dat[dat$ID == id , ])))))
}
cr<-corr("specdata",400)
head(cr)
summary(cr)
submit()
submit()
submit()
q()
